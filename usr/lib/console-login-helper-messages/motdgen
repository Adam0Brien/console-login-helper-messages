#!/bin/bash

# Get updated system information from package managers
# and generate a motd to display this at login.

set -e

PKG_NAME=console-login-helper-messages
MOTD_DIR_PUBLIC=motd.d
MOTD_DIR_PRIVATE=${PKG_NAME}/motd.d
GENERATED_MOTD=/run/${MOTD_DIR_PUBLIC}/${PKG_NAME}.motd
RUN_DROP_DIR=/run/${PKG_NAME}

ANSI_LIGHT_RED='\033[1;31m'
ANSI_LIGHT_BLUE='\033[1;34m'
ANSI_NC='\033[0m'
SUBPOINT='  |->'

source /usr/lib/os-release

# Query rpm-ostree for status and upgrade information,
# and echo the formatted information
print_rpm_ostree_update_info() {
	echo -e "\n[ostree]"

	status_info=${RUN_DROP_DIR}/rpm-ostree-status.json
	upgrade_info=${RUN_DROP_DIR}/rpm-ostree-upgrade-check.out

	rpm-ostree status --json > ${status_info}
	rpm-ostree upgrade --check > ${upgrade_info}

	sec_advisories=$(cat ${upgrade_info} | grep "SecAdvisories")
	pkg_diff=$(cat ${upgrade_info} | grep "Diff")

	up_version=$(cat ${upgrade_info} | grep "Version")
	up_version=$(awk '{ print $2 }' <<< "${up_version}")
	up_commit=$(cat ${upgrade_info} | grep "Commit")
	up_commit=$(awk '{ print $2 }' <<< "${up_commit}")
	upgrade_deployment_pending_reboot=$(jq --arg commit "${up_commit}" '(.deployments[0].booted == false) and (.deployments[0]."base-checksum" | tostring == $commit])' ${status_info})
	up_commit=$(echo "${up_commit}" | awk '{ print substr($0,0,6) }')

	cur_version=$(jq '.deployments | map(select(.booted == true)) | .[]."version"' ${status_info})
	cur_version=$(sed -e 's/^"//' -e 's/"$//' <<< "${cur_version}")
	cur_commit=$(jq '.deployments | map(select(.booted == true)) | .[]."base-checksum"' ${status_info})
	cur_commit=$(sed -e 's/^"//' -e 's/"$//' <<< "${cur_commit}")
	cur_commit=$(echo "${cur_commit}" | awk '{ print substr($0,0,6) }')

	echo -e "current:   ${cur_version} (${cur_commit})"
	update_available_msg=$(echo -e "${ANSI_LIGHT_BLUE}available${ANSI_NC}: ${up_version} (${up_commit})")
	
	# Print upgrade information only if ${up_commit} was set
	if [ -n "${up_commit}" ]; then
		if [ "${upgrade_deployment_pending_reboot}" = "true" ]; then
			echo "${update_available_msg} - deployment pending next reboot"
		else
			echo "${update_available_msg}"
		fi
	fi
	if [ -n "${sec_advisories}" ]; then
		sec_advisories=$(awk '{$1=""; sub(" ", " "); print}' <<< "${sec_advisories}")
		sec_advisories=$(echo "${sec_advisories}" | sed -e "s/^[[:space:]]*//")
		echo -e "${SUBPOINT} ${ANSI_LIGHT_RED}advisories${ANSI_NC}: ${sec_advisories}"
	fi
	if [ -n "${pkg_diff}" ]; then
		pkg_diff=$(awk '{ $1="" ; sub(" ", " ") ; print }' <<< "${pkg_diff}")
		pkg_diff=$(echo "${pkg_diff}" | sed -e "s/^[[:space:]]*//")
		echo -e "${SUBPOINT} packages: ${pkg_diff}"
	fi
}

print_dnf_update_info() {
	echo -e "\n[dnf]"
	dnf -qC updateinfo > ${RUN_DROP_DIR}/dnf-updateinfo.out
	cat ${RUN_DROP_DIR}/dnf-updateinfo.out
}

mkdir -p /run/${MOTD_DIR_PRIVATE}
mkdir -p /run/${MOTD_DIR_PUBLIC}
mkdir -p /run/${RUN_DROP_DIR}
rm -f ${GENERATED_MOTD}

echo -e "\e[${ANSI_COLOR}m${NAME}\e[39m (${VERSION})" > ${GENERATED_MOTD}

if [ -x "$(command -v rpm-ostree)" ]; then
	set +e
	print_rpm_ostree_update_info >> ${GENERATED_MOTD}
	set -e
fi
if [ -x "$(command -v dnf)" ]; then
	set +e
	print_dnf_update_info >> ${GENERATED_MOTD}
	set -e
fi

echo >> ${GENERATED_MOTD}

if [[ -d "/usr/lib/${MOTD_DIR_PRIVATE}" ]]; then
	cat /usr/lib/${MOTD_DIR_PRIVATE}/* 2>/dev/null >> ${GENERATED_MOTD} || true
fi
if [[ -d "/run/${MOTD_DIR_PRIVATE}" ]]; then
	cat /run/${MOTD_DIR_PRIVATE}/* 2>/dev/null >> ${GENERATED_MOTD} || true
fi
if [[ -d "/etc/${MOTD_DIR_PRIVATE}" ]]; then
	cat /etc/${MOTD_DIR_PRIVATE}/* 2>/dev/null >> ${GENERATED_MOTD} || true
fi
