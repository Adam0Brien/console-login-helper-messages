#!/bin/bash     

# Test for issuegen's basic functionality

set -xeuo pipefail

. ${KOLA_EXT_DATA}/test-util.sh

# Pretend to be running from a TTY
faketty () {
    outfile=$1
    shift 1
    script -c "$(printf "%q " "$@")" "${outfile}"
}

for unit in issuegen.path gensnippet-ssh-keys.service; do
  if ! systemctl is-enabled ${PKG_NAME}-${unit}; then
    fatal "unit ${unit} not enabled"
  fi
done
ok "systemd units enabled"

cd $(mktemp -d)

# Check that the issue symlink was created.
# `issuegen` generates an issue at runtime, and places the generated file in 
# /run/issue.d/. To have agetty display this, a symlink from /etc/issue.d/ to 
# /run/issue.d/ is needed.
# This may be changed in the future once util-linux 2.36 is available and we can
# drop issue snippets directly into /run/issue.d. 
ls -l /etc/issue.d/40_${PKG_NAME}.issue > symlink.txt
assert_file_has_content symlink.txt '-> /run/console-login-helper-messages/40_console-login-helper-messages.issue'
ok "symlink"

# If SSH keys are present, check that SSH keys snippets were generated by 
# `gensnippet_ssh_keys` and shown by `agetty`.
if test -n "$(find /etc/ssh -name 'ssh_host_*_key' -print -quit)"; then
    faketty agetty_output.txt agetty --show-issue
    assert_file_has_content agetty_output.txt 'SSH host key:*'
    ok "gensnippet_ssh_keys"
fi

# Check that a new issue snippet is generated when a .issue file is dropped into 
# the issue run directory.
echo 'foo' > ${ISSUE_RUN_SNIPPETS_PATH}/10_foo.issue
sleep 1
faketty agetty_output.txt agetty --show-issue
assert_file_has_content agetty_output.txt 'foo'
ok "display new issue snippet"

tap_finish
